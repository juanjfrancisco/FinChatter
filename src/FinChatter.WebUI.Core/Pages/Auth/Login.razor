@page "/login"
@layout AuthLayout
@inject NavigationManager navigationManager
@inject AuthenticationService authService


<EditForm Model="loginRequest" OnValidSubmit="ExecuteLogin" class="row g-3">
    <DataAnnotationsValidator />

    <h4>Welcome Back</h4>
    <div class="col-12">
        <label>Username</label>
        <InputText id="email" class="form-control" @bind-Value="loginRequest.UserName" />
        <ValidationMessage For="@(() => loginRequest.UserName)" />
    </div>
    <div class="col-12">
        <label>Password</label>
        <InputText type="password" id="password" class="form-control" @bind-Value="loginRequest.Password" />
        <ValidationMessage For="@(() => loginRequest.Password)" />
    </div>
    <div class="col-12">
        <div class="form-check">
            <input class="form-check-input" type="checkbox" id="rememberMe">
            <label class="form-check-label" for="rememberMe"> Remember me</label>
        </div>
    </div>
    <div class="col-12">
        <button type="submit" class="btn btn-dark float-end">Login</button>
    </div>
</EditForm>


<hr class="mt-4">
<div class="col-12">
    <p class="text-center mb-0">Have not account yet? <a href="/registration">Register</a></p>
</div>

@if (ShowAuthError)
{
    <div class="col-12 mt-4">
        <div class="alert alert-danger" role="alert">
            <p>@Error</p>
        </div>
    </div>
}

@code {
    private LoginRequest loginRequest = new LoginRequest();
    public bool ShowAuthError { get; set; }
    public string Error { get; set; }

    public async Task ExecuteLogin()
    {
        ShowAuthError = false;
        var result = await authService.Login(loginRequest);
        if (!result.IsSuccess)
        {
            Error = result.Message;
            ShowAuthError = true;
        }
        else
        {
            navigationManager.NavigateTo("/");
        }
    }
}
